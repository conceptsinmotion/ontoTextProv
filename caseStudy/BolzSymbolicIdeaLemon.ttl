@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix lemon: <http://lemon-model.net/lemon#> .
@prefix blz_ont: <https://conceptsinmotion.org/e-ideas/ontologies/bolzano#> .
@prefix : <https://conceptsinmotion.org/e-ideas/lexicon/bolzano#> .
@prefix dt: <https://conceptsinmotion.org/e-ideas/datatype/> .
@prefix vocab: <https://conceptsinmotion.org/e-ideas/vocabulary/> .
@prefix oa: <https://www.w3.org/TR/annotation-vocab/#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .


dt:OWL_Manchester rdf:label "OWL-DL Manchester" .

###############################################################################
# LEXICONS
###############################################################################

:en_bolzano_lexicon lemon:topic [ lemon:value "English vocabulary associated to Bolzano's Theory of Ideas" ] ;
                 vocab:language vocab:English ;
                 lemon:entry  :object, :idea, :refersTo, :common_idea, :objectless_idea,
                              :objectual_idea, :singular_idea , :symbolic_idea, :imaginary_idea, :real_idea .

:de_bolzano_lexicon lemon:topic [ lemon:value "German vocabulary used by Bolzano in Theory of Ideas" ] ;
                 vocab:language vocab:German ;
                 lemon:entry :gegenstand, :vorstellung , :gemein_vorstellung ,
                             :gegenstandslos_vorstellung , :gegenständlich_vorstellung ,
                             :einzel_vorstellung , :symbolische_vorstellung, :imaginäre_vorstellung,
                             :reale_vorstellung  . # ...


###############################################################################
# LEXICAL ENTRIES
###############################################################################

# ----- ENGLISH ----- #


:object a lemon:LexicalEntry, lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "object"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Object ;
                  # lemon:contex      ??? ;
                  lemon:definition  :object_sense_bolz ] .

:idea a lemon:LexicalEntry, lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :idea_sense_bolz ] .

:refersTo a lemon:LexicalEntry ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "refers to"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:refersTo ;
                  # lemon:contex      ??? ;
                  lemon:definition  :refersTo_sense_bolz ] .

:common_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "common idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Common_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :common_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :common ]
      [ lemon:element :idea ] ) .

:objectless_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "objectless idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Objectless_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :objectless_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :objectless ]
      [ lemon:element :idea ] ) .

:objectual_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "objectual idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Objectual_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :objectual_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :objectual ]
      [ lemon:element :idea ] ) .

:singular_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "singular idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Singular_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :singular_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :singular ]
      [ lemon:element :idea ] ) .

:symbolic_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "symbolic idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Symbolic_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :symbolic_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :symbolic ]
      [ lemon:element :idea ] ) .

:imaginary_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "imaginary idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Imaginary_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :imaginary_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :imaginary ]
      [ lemon:element :idea ] ) .

:real_idea a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "real idea"@en ] ;
    lemon:sense [ lemon:reference   blz_ont:Real_Idea ;
                  # lemon:contex      ??? ;
                  lemon:definition  :real_idea_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :real ]
      [ lemon:element :idea ] ) .

:common   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "common"@en ] .

:objectless   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "objectless"@en ] .

:objectual   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "objectual"@en ] .

:singular   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "singular"@en ] .

:symbolic   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "symbolic"@en ] .

:imaginary   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "imaginary"@en ] .

:real   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "real"@en ] .

# ----- GERMAN ----- #

:gegenstand a lemon:LexicalEntry, lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gegenstand"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :gegenstand_sense_bolz ] .

:vorstellung a lemon:LexicalEntry, lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "vorstellung"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :vorstellung_sense_bolz ] .

# X bezeichnet Y, X bezieht sich auf, X stellt Y vor, X umfasst Y

:gemein_vorstellung a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gemein vorstellung"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :gemein_vorstellung_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :gemein ]
      [ lemon:element :vorstellung ] ) .

:gegenstandslos_vorstellung a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gegenstandslos vorstellung"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :gegenstandslos_vorstellung_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :gegenstandslos ]
      [ lemon:element :vorstellung ] ) .

:gegenständlich_vorstellung a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gegenständlich vorstellung"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :gegenständlich_vorstellung_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :gegenstandslos ]
      [ lemon:element :vorstellung ] ) .

:einzel_vorstellung a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "einzel vorstellung"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :einzel_vorstellung_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :einzel ]
      [ lemon:element :vorstellung ] ) .

:symbolische_vorstellungen a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "symbolische vorstellungen"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :symbolische_vorstellungen_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :symbolische ]
      [ lemon:element :vorstellung ] ) .

:imaginäre_vorstellungen a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "imaginäre vorstellungen"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :imaginäre_vorstellungen_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :imaginäre ]
      [ lemon:element :vorstellung ] ) .

:reale_vorstellungen a lemon:LexicalEntry, lemon:Phrase ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "reale vorstellungen"@de ] ;
    lemon:sense [ # lemon:contex      ??? ;
                  lemon:definition  :reale_vorstellungen_sense_bolz ] ;
    lemon:decomposition (
      [ lemon:element :reale ]
      [ lemon:element :vorstellung ] ) .

:gemein   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gemein"@de ] .

:gegenstandslos   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gegenstandslos"@de ] .

:gegenständlich   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "gegenständlich"@de ] .

:einzel   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "einzel"@de ] .

:symbolische   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "symbolische"@de ] .

:imaginäre   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "imaginäre"@de ] .

:reale   a lemon:Word ;
    lemon:canonicalForm [ a lemon:LexicalForm ; lemon:writtenRep "reale"@de ] .

# IMAGINARY		?			imaginäre, leere, unmögliche


###############################################################################
# SENSES' DEFINITION AND PROVENANCE
###############################################################################

# ---------------- PROPONENTS/PHILOSOPHERS  --------------------- #
# :bolzanoBernard a foaf:Person ;
#               owl:sameAs <https://viaf.org/viaf/24615537> .
#
# :bettiArianna a foaf:Person ;
#               owl:sameAs <https://viaf.org/viaf/313490465> .
#
# :ginammiAnnapaola a foaf:Person ;
#               rdfs:label 'Annapaola Ginammi' ;
#               owl:sameAs <https://dblp.org/pers/w/Wierst:Pauline_van> .

# ---------------- THEORIES --------------------- #
:bolzano_theory_of_ideas a vocab:Theory ;
    lemon:topic [ lemon:value "Bolzano's Theory of Ideas" ] ;
    vocab:proposed_by    :bolzanoBernard ;
    vocab:is_composed_of :gegenstand_sense_bolz, :vorstellung_sense_bolz , :gemein_vorstellung_sense_bolz ,
                      :gegenstandslos_vorstellung_sense_bolz , :gegenständlich_vorstellung_sense_bolz ,
                      :einzel_vorstellung_sense_bolz , :symbolische_vorstellung_sense_bolz,
                      :imaginäre_vorstellung_sense_bolz, :reale_vorstellung_sense_bolz. # ...


:interp_of_bolzano_theory_of_ideas a vocab:Theory ; ## Combination of Lexical Senses => Ontology
    # lemon:topic [
    lemon:value "Bolzano's Theory of Ideas interpreted by Arianna Betti" ;
    vocab:interpretationOf :bolzano_theory_of_ideas ;
    vocab:proposed_by    :bettiArianna, :ginammiAnnapaola ;
    vocab:is_composed_of :object_sense_bolz, :idea_sense_bolz, :refersTo_sense_bolz ,
                      :common_idea_sense_bolz, :objectless_idea_sense_bolz ,
                      :objectual_idea_sense_bolz, :singular_idea_sense_bolz ,
                      :symbolic_idea_sense_bolz, :imaginary_idea_sense_bolz ,
                      :real_idea_sense_bolz ;
    lemon:condition [ a lemon:SenseDefinition ;
                      lemon:value """
                      Ontology: <http://example.org/ontology>"""^^dt:OWL_Manchester
                     ] .


:revised_interp_of_bolzano_theory_of_ideas a vocab:Theory ;
    lemon:topic [ lemon:value "Bolzano's Theory of Ideas interpreted by Arianna Betti" ] ;
    vocab:interpretationOf :bolzano_theory_of_ideas ;
    vocab:revisionOf       :interp_of_bolzano_theory_of_ideas ;
    vocab:proposed_by    :bettiArianna, :ginammiAnnapaola ;
    vocab:is_composed_of :object_sense_bolz, :idea_sense_bolz, :refersTo_sense_bolz ,
                      :common_idea_sense_bolz, :objectless_idea_sense_bolz ,
                      :objectual_idea_sense_bolz, :singular_idea_sense_bolz ,
                      :symbolic_idea_sense_bolz , :imaginary_idea_sense_bolz,
                      :real_idea_sense_bolz.

# Betti, Arianna. ‘Bolzano’s Universe: Truth, Logic and Metaphysics’. In Categories of Being: Essays on Metaphysics and Logic, edited by Leila Haaparanta and Heikki J. Koskinen, 167–190. Oxford: Oxford University Press, 2012. https://1drv.ms/b/s!AgPq3zEkkYuOsFrbsytkO6dh2jGO.
#
# Van Wierst, Pauline. “Salva Veritate – A Master Thesis on Bolzanian Analyticity and Computational Methods within Philosophical Research.” MA Thesis, Vrije Universiteit Amsterdam, 2013.
#
# https://plato.stanford.edu/search/searcher.py?query=bolzano


# -------------------------------------- #
# ----- Bolzano's Theory of Ideas  ----- #

# ----- gegenstand ----- #
# SENSE
:gegenstand_sense_bolz   a lemon:LexicalSense ;
    lemon:value       "Ich verstehe aber unter dem Gegenstande einer Vorstellung jenes (bald existirende, bald nicht existirende) Etwas, von dem wir zu sagen pflegen, daß sie es vorstelle, oder daß sie die Vorstellung davon sey."@de .

# ANNOTATION
:gegenstand_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :gegenstand_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.it/books?id=NbgAAAAAcAAJ&pg=PA69> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Ich verstehe aber unter dem Gegenstande einer Vorstellung jenes (bald existirende, bald nicht existirende) Etwas, von dem wir zu sagen pflegen, daß sie es vorstelle, oder daß sie die Vorstellung davon sey." ;
            oa:prefix "beizulegen. " ;
            oa:suffix "" ] ] .


# ----- vorstellung ----- #
# SENSE
 :vorstellung_sense_bolz   a lemon:LexicalSense ;
     lemon:value       "Wahr ist es freilich, daß jeder Satz Vorstellungen enthalte, aber nur als Theile, mit denen er selbst nicht von derselben Art ist."@de .

 # ANNOTATION
 :vorstellung_sense_bolz_annotation a oa:Annotation ;
     oa:hasBody :vorstellung_sense_bolz ;
     oa:hasTarget [
         oa:hasSource <https://books.google.nl/books?id=TNhkAAAAcAAJ&pg=PA99> ;
         oa:hasSelector [
             a oa:TextQuoteSelector ;
             oa:exact  "Wahr ist es freilich, daß jeder Satz Vorstellungen enthalte, aber nur als Theile, mit denen er selbst nicht von derselben Art ist." ;
             oa:prefix "erklären. " ;
             oa:suffix " Theile mit Wahr ist es ferner" ] ] .

# ----- gemein_vorstellung ----- #
# SENSE                       # rdf:type
:gemein_vorstellung_sense_bolz   a lemon:LexicalSense ;
    lemon:value       "Jede andere Vorstellung, welche der Gegenstände mehre (wenigstens zwei) vorstellt, wird dann im Gegensatze mit solchen Einzelvorstellungen eine Gemeinvorstellung, auch eine allgemeine Vorstellung genannt."@de .

# ANNOTATION
:gemein_vorstellung_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :gemein_vorstellung_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.it/books?id=JQyKDwAAQBAJ&pg=PA121> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Jede andere Vorstellung, welche der Gegenstände mehre (wenigstens zwei) vorstellt, wird dann im Gegensatze mit solchen Einzelvorstellungen eine Gemeinvorstellung, auch eine allgemeine Vorstellung genannt." ;
            oa:prefix "zu nennen. " ;
            oa:suffix "" ] ] .

# ----- gegenstandslos_vorstellung ----- #
# SENSE
:gegenstandslos_vorstellung_sense_bolz  a lemon:LexicalSense ;
    lemon:value       "Wenn ich mit Recht vermuthe, daß es auch Sätze gebe, deren Unterlage gar keinen Gegenstand vorstellt: so wird es erlaubt seyn, dergleichen Sätze gegenstandslose zu nennen."@de .

# ANNOTATION
:gegenstandslos_vorstellung_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :gegenstandslos_vorstellung_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.nl/books?id=ZdhkAAAAcAAJ&pg=PA77> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Wenn ich mit Recht vermuthe, daß es auch Sätze gebe, deren Unterlage gar keinen Gegenstand vorstellt: so wird es erlaubt seyn, dergleichen Sätze gegenstandslose zu nennen." ;
            oa:prefix "" ;
            oa:suffix "Andere Sätze," ] ] .

# ----- gegenständlich_vorstellung ----- #
# SENSE
:gegenständlich_vorstellung_sense_bolz   a lemon:LexicalSense ;
    lemon:value       "Ich verstehe aber unter der Gegenständlichkeit einer Vorstellung an sich nichts Anderes, als daß es Gegenstände, die unter ihr stehen, gebe;"@de .

# ANNOTATION
:gegenständlich_vorstellung_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :gegenständlich_vorstellung_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.nl/books?id=NbgAAAAAcAAJ&pg=PA222> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Ich verstehe aber unter der Gegenständlichkeit einer Vorstellung an sich nichts Anderes, als daß es Gegenstände, die unter ihr stehen, gebe;" ;
            oa:prefix "1) " ;
            oa:suffix "(§. 30.)," ] ] .

# ----- einzel_vorstellung ----- #
# SENSE
:einzel_vorstellung_sense_bolz a lemon:LexicalSense ;
    lemon:value       "Einige Logiker haben dergleichen Vorstellungen, die nur einen einzigen Gegenstand haben, einzelne Vorstellungen genannt. Da aber jede Vorstellung als solche nur Eine ist, und mithin auch eine einzelne heißen kann: so wird es wohl richtiger seyn, sie mit Hrn. Krug (Fund. §.79. A. 2.154) Einzelvorstellungen zu nennen."@de .

# ANNOTATION
:einzel_vorstellung_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :einzel_vorstellung_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.it/books?id=JQyKDwAAQBAJ&pg=PA121> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Einige Logiker haben dergleichen Vorstellungen, die nur einen einzigen Gegenstand haben, einzelne Vorstellungen genannt. Da aber jede Vorstellung als solche nur Eine ist, und mithin auch eine einzelne heißen kann: so wird es wohl richtiger seyn, sie mit Hrn. Krug (Fund. §.79. A. 2.154) Einzelvorstellungen zu nennen." ;
            oa:prefix "doch nur Einer sein. -- " ;
            oa:suffix " Jede andere Vorstellung" ] ] .

# ----- symbolische_vorstellung ----- #
# SENSE
:symbolische_vorstellungen_sense_bolz a lemon:LexicalSense ;
    lemon:value       "Es kann aber auch symbolische Vorstellungen geben, welche imaginär sind"@de .
#     vocab:hasPart       :symbolische_vorstellung_sense_partX_bolz ;
#     vocab:by            :bolzanoBernard ;
#
#
# :symbolische_vorstellung_sense_partX_bolz a lemon:LexicalSense ;
#     lemon:value       "Es kann aber auch symbolische Vorstellungen geben, welche imaginär sind"@de ;
#     vocab:literalTransalation "But there can also be symbolic ideas that are imaginary"@en .


:symbolische_vorstellung_sense_partX_bolz_annotation a oa:Annotation ;
    oa:hasBody :symbolische_vorstellungen_sense_bolz ; #:symbolische_vorstellung_sense_partX_bolz ;
    oa:hasTarget [
        # oa:hasSource <https://play.google.com/books/reader?id=tLU9AAAAIAAJ&pg=GBS.PR4> ;
        oa:hasSource <https://books.google.nl/books?id=NbgAAAAAcAAJ&pg=PA426> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Es kann aber auch symbolische Vorstellungen geben, welche imaginär sind" ;
            oa:prefix "Vorstellungsvorstellungen nennen. " ;
            oa:suffix "; und gerade" ] ] .

# ----- imaginäre_vorstellung ----- #
# SENSE
:imaginäre_vorstellung_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "Ich will also, wenn ich behaupte, daß es auch imaginäre Vorstellungen gebe, bloß sagen, daß einige Vorstellungen das Besondere haben, daß sich aus ihren verschiedenen Bestandtheilen für jenen Gegenstand, welchen sie ihrer Form nach vorstellen könnten, Beschaffenheiten ergeben, die miteinander im Widerspruche stehen."@de .

# ANNOTATION
:imaginäre_vorstellung_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :imaginäre_vorstellung_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.nl/books?id=WapeAAAAcAAJ&pg=PA315> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Ich will also, wenn ich behaupte, daß es auch imaginäre Vorstellungen gebe, bloß sagen, daß einige Vorstellungen das Besondere haben, daß sich aus ihren verschiedenen Bestandtheilen für jenen Gegenstand, welchen sie ihrer Form nach vorstellen könnten, Beschaffenheiten ergeben, die miteinander im Widerspruche stehen." ;
            oa:prefix "oft so sprechen. " ;
            oa:suffix " Wenn man " ] ] .

# ----- imaginäre_vorstellung ----- #
# SENSE
:reale_vorstellung_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "..."@de .

# ANNOTATION
:reale_vorstellung_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :reale_vorstellung_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.nl/books?id=WapeAAAAcAAJ&pg=PA315> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "CHECK IT OUT" ;
            oa:prefix "..." ;
            oa:suffix "..." ] ] .

# -------------------------------------------------------------------#
# ----- Bolzano's Theory of Ideas interpreted by Betti or Ginammi ----- #

# ----- OBJECT ----- #
# SENSE
:object_sense_bolz     a lemon:LexicalSense ;
    lemon:value       """The first box would contain objects that exist (existieren), have Dasein (§34 I 154), are effective (wirklich, §79 I 362, 366; §275 III 16; §142 II 65; AT 85), or are real (real).4 The other box would contain objects that do not exist, don’t have Dasein, or are not effective or real"""@en ;
    vocab:interpretationOf  :gegenstand_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Object
          EquivalentTo: Idea or NotIdea"""^^dt:OWL_Manchester
          ## certainty ??
        ] .

# ANNOTATION
:object_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :object_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://onedrive.live.com/?authkey=%21ANuzK2Q7p2HaMY4&cid=8E8B912431DFEA03&id=8E8B912431DFEA03%216234&parId=8E8B912431DFEA03%216233&o=OneUp> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  """The first box would contain objects that exist (existieren), have Dasein (§34 I 154), are effective (wirklich, §79 I 362, 366; §275 III 16; §142 II 65; AT 85), or are real (real).4 The other box would contain objects that do not exist, don’t have Dasein, or are not effective or real""" ;
            oa:prefix "ontology in two ways-of-being boxes, as it were. " ;
            oa:suffix ", though Bolzano makes clear that ideas and propositions" ] ] .


# ----- IDEA ----- #
# SENSE
:idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "an idea is that part of a proposition that is not itself a proposition"@en,
                      "The most interesting characteristic of ideas is their semantic character: they may or may not refer to something. In case they do, they are objectual; in case they don’t, they are objectless."@en  ;
    vocab:interpretationOf  :vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Idea
          EquivalentTo: Objectless_Idea or Objectual_Idea
          EquivalentTo: Real_Idea or Imaginary_Idea
          SubClassOf: Object
          DisjointWith: NotIdea"""^^dt:OWL_Manchester
        ] .

# ANNOTATION
:idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :idea_sense_bolz ;
    oa:hasTarget :targetAnnotIdeaObjectObjectless ;
    oa:hasTarget [
        oa:hasSource <https://onedrive.live.com/?authkey=%21ANuzK2Q7p2HaMY4&cid=8E8B912431DFEA03&id=8E8B912431DFEA03%216234&parId=8E8B912431DFEA03%216233&o=OneUp> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "an idea is that part of a proposition that is not itself a proposition" ;
            oa:prefix "is mereologically derived from it; " ;
            oa:suffix " (§48 I 216 2; BE 67)." ] ,
          :selectorIdeaObjectObjectless ] .

# TARGET (REUSED)
:targetAnnotIdeaObjectObjectless
        oa:hasSource <https://onedrive.live.com/?authkey=%21ANuzK2Q7p2HaMY4&cid=8E8B912431DFEA03&id=8E8B912431DFEA03%216234&parId=8E8B912431DFEA03%216233&o=OneUp> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "The most interesting characteristic of ideas is their semantic character: they may or may not refer to something. In case they do, they are objectual; in case they don’t, they are objectless." ;
            oa:prefix "" ;
            oa:suffix "(§66 I 297), " ] .



# ----- REFERS-TO ----- #
# SENSE
:refersTo_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "The most interesting characteristic of ideas is their semantic character: they may or may not refer to something. In case they do, they are objectual; in case they don’t, they are objectless."@en  ;
    # vocab:interpretationOf  ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          ObjectProperty: refersTo
          Range: Idea
          Domain: Object """^^dt:OWL_Manchester ### ?????????????????????
        ] .

# ANNOTATION
:refersTo_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :refersTo_sense_bolz ;
    oa:hasTarget :targetAnnotIdeaObjectObjectless .


# ----- OBJECTLESS IDEA ----- #
# SENSE
:objectless_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "The most interesting characteristic of ideas is their semantic character: they may or may not refer to something. In case they do, they are objectual; in case they don’t, they are objectless."@en  ;
    vocab:interpretationOf  :gegenstandslos_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Objectless_Idea
          SubClassOf: Idea
          DisjointWith: Objectual_Idea """^^dt:OWL_Manchester
        ] .


# ANNOTATION
:objectless_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :objectless_idea_sense_bolz ;
    oa:hasTarget :targetAnnotIdeaObjectObjectless .


# ----- OBJECTUAL IDEA ----- #
# SENSE
:objectual_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "The most interesting characteristic of ideas is their semantic character: they may or may not refer to something. In case they do, they are objectual; in case they don’t, they are objectless."@en  ;
    vocab:interpretationOf  :gegenständlich_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Objectual_Idea
          EquivalentTo: refersTo some Object
          SubClassOf: Idea
          DisjointWith: Objectless_Idea """^^dt:OWL_Manchester
        ] .

# ANNOTATION
:objectual_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :objectual_idea_sense_bolz ;
    oa:hasTarget :targetAnnotIdeaObjectObjectless, :targetAnnotObjectualIdeaCommonSingular .


# TARGET (REUSED)
:targetAnnotObjectualIdeaCommonSingular
        oa:hasSource <https://onedrive.live.com/?authkey=%21ANuzK2Q7p2HaMY4&cid=8E8B912431DFEA03&id=8E8B912431DFEA03%216234&parId=8E8B912431DFEA03%216233&o=OneUp> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Objectual ideas may refer to exactly one object, like [Brigitte Fassbaender], in which case they are called singular, or to more than one, like [singer], in which case they are called common" ;
            oa:prefix "[nothing] (§67 I 304).10" ;
            oa:suffix " (§68 I 308)" ] .


# ----- COMMON IDEA ----- #
# SENSE
:common_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "Objectual ideas may refer to exactly one object, like [Brigitte Fassbaender], in which case they are called singular, or to more than one, like [singer], in which case they are called common"@en ;
    vocab:interpretationOf  :gemein_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Common_Idea
          SubClassOf:
              Idea,
              refersTo min 2 Object """^^dt:OWL_Manchester
        ] .


# ANNOTATION
:common_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :common_idea_sense_bolz ;
    oa:hasTarget :targetAnnotObjectualIdeaCommonSingular .


# ----- SINGULAR IDEA ----- #
# SENSE
:singular_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "Objectual ideas may refer to exactly one object, like [Brigitte Fassbaender], in which case they are called singular, or to more than one, like [singer], in which case they are called common"@en ;
    vocab:interpretationOf  :einzel_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Singular_Idea
          SubClassOf:
            Idea,
            refersTo exactly 1 Object
          DisjointWith: Objectless_Idea """^^dt:OWL_Manchester
        ] .

# ANNOTATION
:singular_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :singular_idea_sense_bolz ;
    oa:hasTarget :targetAnnotObjectualIdeaCommonSingular .


# ----- IMAGINARY IDEA ----- #
# SENSE
:imaginary_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "A special kind of empty ideas, viz. contradictory ideas (or, as Bolzano usually prefers to call them, imaginary ideas) cannot even have an object (WL I, 315 ff., WL III, 405 f.), examples being [a round polygon], [a round square], [a triangle that is quadrangular], [a regular pentagon], [a wooden iron tool], [an equilateral rectangular triangle]"@en ;
    vocab:interpretationOf  :imaginäre_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Imaginary_Idea
          SubClassOf:
            Objectless_Idea
          DisjointWith: Real_Idea """^^dt:OWL_Manchester
        ] .

# ANNOTATION
:imaginary_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :imaginary_idea_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://plato.stanford.edu/entries/bolzano/> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "A special kind of empty ideas, viz. contradictory ideas (or, as Bolzano usually prefers to call them, imaginary ideas) cannot even have an object (WL I, 315 ff., WL III, 405 f.), examples being [a round polygon], [a round square], [a triangle that is quadrangular], [a regular pentagon], [a wooden iron tool], [an equilateral rectangular triangle]" ;
            oa:prefix "[winged horse] (WL III, 24). " ;
            oa:suffix " (WL I, 305, 315, 317, 321, 324, WL II, 329)." ] ] .

# ----- REAL IDEA ----- #
# SENSE
:real_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "real ideas are ..."@en ;
    vocab:interpretationOf  :reale_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Real_Idea
          SubClassOf:
            Idea
          DisjointWith: Imaginary_Idea """^^dt:OWL_Manchester
        ] .

# ANNOTATION
:real_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :real_idea_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://checkitout.org> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "CHECK IT OUT" ;
            oa:prefix "..." ;
            oa:suffix "..." ] ] .

# ----- SYMBOLIC IDEA ----- #
# SENSE
:symbolic_idea_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "A crucial element in Bolzano’s theory of reference and of his semiotics and a cornerstone of his logic is the notion of “symbolic idea” (§90 I 426–28), that is, an idea that refers to (an)other idea(s) or proposition(s), for instance [truth] or [idea]."@en ;
    vocab:interpretationOf  :symbolische_vorstellung_sense_bolz ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Symbolic_Idea
          EquivalentTo: (refersTo some Idea) and (refersTo only Idea)
          SubClassOf: Idea """^^dt:OWL_Manchester
        ] .


# ANNOTATION
:symbolic_idea_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :symbolic_idea_sense_bolz ;
    oa:hasTarget [ #170
        oa:hasSource <https://onedrive.live.com/?authkey=%21ANuzK2Q7p2HaMY4&cid=8E8B912431DFEA03&id=8E8B912431DFEA03%216234&parId=8E8B912431DFEA03%216233&o=OneUp> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "A crucial element in Bolzano’s theory of reference and of his semiotics and a cornerstone of his logic is the notion of “symbolic idea” (§90 I 426–28), that is, an idea that refers to (an)other idea(s) or proposition(s), for instance [truth] or [idea]." ;
            oa:prefix "H. K. Gruber, and its width is 1.11 " ;
            oa:suffix "" ] ] .


############ INFERENCE #################
:symbolic_idea_sense_bolz_inferred    a vocab:InferredSense ;
    vocab:partOf               :symbolic_idea_sense_bolz ;
    vocab:hasCounterEvidence   :symbolic_idea_revised_sense_bolz_annotation ;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          SubClassOf: Objectual_Idea """^^dt:OWL_Manchester ;
          vocab:wasDerivedFrom  :inferenceX
        ] .


# ----- SYMBOLIC IDEA REVISED ----- #
# SENSE
:symbolic_idea_revised_sense_bolz    a lemon:LexicalSense ;
    lemon:value       "symbolic ideas are ..."@en ;
    vocab:interpretationOf  :symbolische_vorstellung_sense_bolz ;
    vocab:revisionOf        :symbolic_idea_sense_bolz;
    lemon:condition
        [ a lemon:SenseDefinition ;
          lemon:value """
          Class: Symbolic_Idea
          EquivalentTo: Imaginary_Idea or (refersTo some Idea) and (refersTo only Idea)
          SubClassOf: Idea """^^dt:OWL_Manchester
        ] .


# ANNOTATION
:symbolic_idea_revised_sense_bolz_annotation a oa:Annotation ;
    oa:hasBody :symbolic_idea_revised_sense_bolz ;
    oa:hasTarget [
        oa:hasSource <https://books.google.nl/books?id=NbgAAAAAcAAJ&pg=PA426> ;
        oa:hasSelector [
            a oa:TextQuoteSelector ;
            oa:exact  "Es kann aber auch symbolische Vorstellungen geben, welche imaginär sind" ;
            oa:prefix "Vorstellungsvorstellungen nennen. " ;
            oa:suffix "; und gerade" ] ] .


# # ----- IMAGINARY IDEA ----- #
# # SENSE
# :imaginary_idea_sense_bolz
#     lemon:value       "imaginary ideas are ..."@en ;
#     vocab:interpretationOf  :imaginär_vorstellung_sense_bolz ;
#     lemon:condition
#         [ lemon:value """
#           Class: Imaginary_Idea
#           SubClassOf: Symbolic_Idea
#           DisjointWith: Objectless_Idea """^^dt:OWL_Manchester
#         ] .
#
#
# # ANNOTATION
# :imaginary_idea_sense_bolz_annotation a oa:Annotation ;
#     oa:hasBody :imaginary_idea_sense_bolz ;
#     oa:hasTarget [
#         oa:hasSource <https://checkitout.org> ;
#         oa:hasSelector [
#             a oa:TextQuoteSelector ;
#             oa:exact  "CHECK IT OUT" ;
#             oa:prefix "..." ;
#             oa:suffix "..." ] ] .
#
# # ----- OBJECTUAL SYMBOLIC IDEA ----- #
# # SENSE
# :objectual_symbolic_idea_sense_bolz
#     lemon:value       "objectual symbolic ideas are ..."@en ;
#     vocab:interpretationOf  :gegenständlich_symbolische_vorstellung_sense_bolz ;
#     lemon:condition
#         [ lemon:value """
#           Class: Objectual_Symbolic_Idea
#           SubClassOf: Symbolic_Idea
#           DisjointWith: Imaginary_Idea """^^dt:OWL_Manchester
#         ] .
#
#
# # ANNOTATION
# :symbolic_idea_sense_bolz_annotation a oa:Annotation ;
#     oa:hasBody :symbolic_idea_sense_bolz ;
#     oa:hasTarget [
#         oa:hasSource <https://checkitout.org> ;
#         oa:hasSelector [
#             a oa:TextQuoteSelector ;
#             oa:exact  "CHECK IT OUT" ;
#             oa:prefix "..." ;
#             oa:suffix "..." ] ] .


## check relevant result / scenario
    # From silvan's example ->
    # think of how to record the process of refusing a particular part of the Interpretation
    # based on one or more conflicting infererencing ...

# How to say that Arianna says that Bolzano said A and B …. And from both follows C (literal reproduction (citation in quotes), rephrasing/interpreting (citation without quotes), translating)
# When producing inferences, one should be able to filter the set of propositions that will be part of the reasoning, and whatever consequences produced should make this explicit.
# Process of building an ontology or complementing or just reusing. State if a concept has being defined already or not. Also who has formalised it and when.
# First time a term is used at all or in a specific sense.
# Proponent changes his/het mind.

### how to align it with proposal/belief, annotation and factoid
